import os
import streamlit as st
import pandas as pd
from informe_pdf import generar_informe_pdf

# üìÇ Ruta del Excel en tu repo
xlsx_path = "datosBI.xlsx"

if not os.path.exists(xlsx_path):
    st.error(f"‚ùå No se encontr√≥ {xlsx_path}. Aseg√∫rate de subirlo al repo.")
else:
    try:
        # ‚úÖ Leer archivo Excel
        df = pd.read_excel(xlsx_path)

        # --- Normalizaci√≥n de columnas problem√°ticas ---
        if "A√±o" in df.columns:
            df["A√±o"] = pd.to_numeric(df["A√±o"], errors="coerce")
            df = df.dropna(subset=["A√±o"])
            df["A√±o"] = df["A√±o"].astype(int)

        if "budget" in df.columns:
            df["budget"] = pd.to_numeric(df["budget"], errors="coerce")

        if "revenue" in df.columns:
            df["revenue"] = pd.to_numeric(df["revenue"], errors="coerce")

        if "genero" in df.columns:
            # limpiar g√©neros con llaves u otros s√≠mbolos raros
            df["genero"] = (
                df["genero"]
                .astype(str)
                .str.replace(r"[{}]", "", regex=True)
                .str.strip()
            )

        # --- Filtros ---
        st.title("üé¨ Recomendador de Pel√≠culas")

        generos = st.multiselect(
            "Elige g√©neros",
            df["genero"].dropna().unique().tolist() if "genero" in df.columns else [],
        )
        directores = st.multiselect(
            "Elige directores",
            df["director"].dropna().unique().tolist() if "director" in df.columns else [],
        )
        palabra = st.text_input("Buscar palabra clave en sinopsis")

        a√±o_min = int(df["A√±o"].min()) if "A√±o" in df.columns else 1900
        a√±o_max = int(df["A√±o"].max()) if "A√±o" in df.columns else 2100

        a√±o_desde = st.number_input(
            "A√±o desde", min_value=1900, max_value=2100, value=a√±o_min
        )
        a√±o_hasta = st.number_input(
            "A√±o hasta", min_value=1900, max_value=2100, value=a√±o_max
        )

        # --- Aplicar filtros ---
        df_filtrado = df.copy()

        # Aqu√≠ puedes seguir con tu l√≥gica de filtrado y generaci√≥n de informe
        # Ejemplo: generar el PDF
        if st.button("üìÑ Generar Informe PDF"):
            archivo_pdf = generar_informe_pdf(df_filtrado)
            with open(archivo_pdf, "rb") as f:
                st.download_button(
                    "‚¨áÔ∏è Descargar Informe",
                    f,
                    file_name=archivo_pdf,
                    mime="application/pdf",
                )

    except Exception as e:
        st.error(f"‚ùå Error al cargar o procesar el archivo xlsx: {e}")
